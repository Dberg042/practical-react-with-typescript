{
	"runtime": "NetCore21",
	"defaultVariables": null,
	"documentGenerator": {
		"fromDocument": {
			"json": "{\r\n  \"openapi\": \"3.0.0\",\r\n  \"paths\": {\r\n    \"/health\": {\r\n      \"get\": {\r\n        \"operationId\": \"AppController_getHealth\",\r\n        \"parameters\": [],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"WBE\"\r\n        ]\r\n      }\r\n    },\r\n    \"/users/{id}\": {\r\n      \"get\": {\r\n        \"operationId\": \"UsersController_getUser\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Get a specific user based on their ID\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"required\": true,\r\n            \"in\": \"path\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"No user with this ID exists\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Users\"\r\n        ]\r\n      },\r\n      \"delete\": {\r\n        \"operationId\": \"UsersController_deleteUser\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Delete a specific user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"required\": true,\r\n            \"in\": \"path\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The deleted user\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"No user with the given id exists\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Users\"\r\n        ]\r\n      }\r\n    },\r\n    \"/users\": {\r\n      \"get\": {\r\n        \"operationId\": \"UsersController_getUsers\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Get all users in the system\",\r\n        \"parameters\": [],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The user\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserDTO\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Users\"\r\n        ]\r\n      },\r\n      \"post\": {\r\n        \"operationId\": \"UsersController_createUser\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Create a new user with a new ID\",\r\n        \"parameters\": [],\r\n        \"requestBody\": {\r\n          \"required\": true,\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserWithoutIDDTO\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"The newly created user\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserDTO\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Users\"\r\n        ]\r\n      },\r\n      \"put\": {\r\n        \"operationId\": \"UsersController_updateUser\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Update an existing user.\",\r\n        \"parameters\": [],\r\n        \"requestBody\": {\r\n          \"required\": true,\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserDTO\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The updated user\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"No user with the given ID exists\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Users\"\r\n        ]\r\n      }\r\n    },\r\n    \"/users/{id}/memberships\": {\r\n      \"get\": {\r\n        \"operationId\": \"UsersController_getUserMemberships\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Get all memberships for the user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"required\": true,\r\n            \"in\": \"path\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"All memberships for the current user\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GroupIdsDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"No user exists with the specified id\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Users\"\r\n        ]\r\n      },\r\n      \"put\": {\r\n        \"operationId\": \"UsersController_setUserMemberships\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Set user memberships to the specified group ids\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"required\": true,\r\n            \"in\": \"path\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"required\": true,\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/GroupIdsDTO\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The new memberships for the user\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserMembershipsDTO\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Users\"\r\n        ]\r\n      }\r\n    },\r\n    \"/groups/{id}\": {\r\n      \"get\": {\r\n        \"operationId\": \"GroupsController_getGroup\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Get a specific group based on their ID\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"required\": true,\r\n            \"in\": \"path\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GroupDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"No group with this ID exists\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ]\r\n      },\r\n      \"delete\": {\r\n        \"operationId\": \"GroupsController_deleteGroup\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Delete a specific group\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"required\": true,\r\n            \"in\": \"path\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The deleted group\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GroupDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"No group with the given id exists\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ]\r\n      }\r\n    },\r\n    \"/groups\": {\r\n      \"get\": {\r\n        \"operationId\": \"GroupsController_getGroups\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Get all groups in the system\",\r\n        \"parameters\": [],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"All groups\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/GroupDTO\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ]\r\n      },\r\n      \"post\": {\r\n        \"operationId\": \"GroupsController_createGroup\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Create a new group with a new ID\",\r\n        \"parameters\": [],\r\n        \"requestBody\": {\r\n          \"required\": true,\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/GroupWithoutIDDTO\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"The newly created group\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GroupDTO\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ]\r\n      },\r\n      \"put\": {\r\n        \"operationId\": \"GroupsController_updateGroup\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Update an existing group.\",\r\n        \"parameters\": [],\r\n        \"requestBody\": {\r\n          \"required\": true,\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/GroupDTO\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The updated group\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GroupDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"No group with the given ID exists\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ]\r\n      }\r\n    },\r\n    \"/groups/{id}/members\": {\r\n      \"get\": {\r\n        \"operationId\": \"GroupsController_getMembers\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Get all members of a specific group.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"required\": true,\r\n            \"in\": \"path\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"User ids for all members of the group.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserIdsDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"No group exists with the specified id.\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ]\r\n      },\r\n      \"put\": {\r\n        \"operationId\": \"GroupsController_setMembers\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Set members of the specific group\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"required\": true,\r\n            \"in\": \"path\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"required\": true,\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserIdsDTO\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The new members of the group\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GroupMembershipsDTO\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ]\r\n      }\r\n    },\r\n    \"/auth\": {\r\n      \"post\": {\r\n        \"operationId\": \"AuthController_auth\",\r\n        \"summary\": \"\",\r\n        \"description\": \"Given a user name and password will check whether that user exists and if so return an object with the user ID and name.\",\r\n        \"parameters\": [],\r\n        \"requestBody\": {\r\n          \"required\": true,\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/AuthDTO\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The userName and password to attempt to log in\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AuthResponseDTO\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"401\": {\r\n            \"description\": \"UserName or password incorrect\"\r\n          }\r\n        },\r\n        \"tags\": [\r\n          \"Auth\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"info\": {\r\n    \"title\": \"UserAdmin Web-Back-End\",\r\n    \"description\": \"A very basic user-management server that stores data in-memory.\\n\",\r\n    \"version\": \"1.0\",\r\n    \"contact\": {\r\n      \"name\": \"Practical React with Typescript\",\r\n      \"url\": \"https://github.com/rudfoss/practical-react-with-typescript\",\r\n      \"email\": \"thomas.rudfoss@bouvet.no\"\r\n    }\r\n  },\r\n  \"tags\": [],\r\n  \"servers\": [],\r\n  \"components\": {\r\n    \"schemas\": {\r\n      \"UserDTO\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 8\r\n          },\r\n          \"userName\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 2\r\n          },\r\n          \"password\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 6,\r\n            \"maxLength\": 64,\r\n            \"description\": \"A password between 6-64 characters\"\r\n          },\r\n          \"firstName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"lastName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"email\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"email\"\r\n          },\r\n          \"age\": {\r\n            \"type\": \"number\"\r\n          },\r\n          \"comments\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"disabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"disabledSince\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"id\",\r\n          \"userName\",\r\n          \"password\"\r\n        ]\r\n      },\r\n      \"UserWithoutIDDTO\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"userName\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 2\r\n          },\r\n          \"password\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 6,\r\n            \"maxLength\": 64,\r\n            \"description\": \"A password between 6-64 characters\"\r\n          },\r\n          \"firstName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"lastName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"email\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"email\"\r\n          },\r\n          \"age\": {\r\n            \"type\": \"number\"\r\n          },\r\n          \"comments\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"disabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"disabledSince\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"userName\",\r\n          \"password\"\r\n        ]\r\n      },\r\n      \"GroupIdsDTO\": {\r\n        \"type\": \"array\",\r\n        \"items\": {\r\n          \"type\": \"string\"\r\n        }\r\n      },\r\n      \"UserMembershipsDTO\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"user\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"type\": \"string\",\r\n                \"minLength\": 8\r\n              },\r\n              \"userName\": {\r\n                \"type\": \"string\",\r\n                \"minLength\": 2\r\n              },\r\n              \"password\": {\r\n                \"type\": \"string\",\r\n                \"minLength\": 6,\r\n                \"maxLength\": 64,\r\n                \"description\": \"A password between 6-64 characters\"\r\n              },\r\n              \"firstName\": {\r\n                \"type\": \"string\"\r\n              },\r\n              \"lastName\": {\r\n                \"type\": \"string\"\r\n              },\r\n              \"email\": {\r\n                \"type\": \"string\",\r\n                \"format\": \"email\"\r\n              },\r\n              \"age\": {\r\n                \"type\": \"number\"\r\n              },\r\n              \"comments\": {\r\n                \"type\": \"string\"\r\n              },\r\n              \"disabled\": {\r\n                \"type\": \"boolean\"\r\n              },\r\n              \"disabledSince\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"required\": [\r\n              \"id\",\r\n              \"userName\",\r\n              \"password\"\r\n            ]\r\n          },\r\n          \"memberOfIds\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"description\": \"Group ids of groups this user is a member of\"\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"user\",\r\n          \"memberOfIds\"\r\n        ]\r\n      },\r\n      \"GroupDTO\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 8\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 2\r\n          },\r\n          \"role\": {\r\n            \"type\": \"string\",\r\n            \"enum\": [\r\n              \"guest\",\r\n              \"user\",\r\n              \"userAdmin\",\r\n              \"groupAdmin\"\r\n            ]\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"id\",\r\n          \"name\",\r\n          \"role\"\r\n        ]\r\n      },\r\n      \"GroupWithoutIDDTO\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 2\r\n          },\r\n          \"role\": {\r\n            \"type\": \"string\",\r\n            \"enum\": [\r\n              \"guest\",\r\n              \"user\",\r\n              \"userAdmin\",\r\n              \"groupAdmin\"\r\n            ]\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"name\",\r\n          \"role\"\r\n        ]\r\n      },\r\n      \"UserIdsDTO\": {\r\n        \"type\": \"array\",\r\n        \"items\": {\r\n          \"type\": \"string\"\r\n        }\r\n      },\r\n      \"GroupMembershipsDTO\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"group\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"type\": \"string\",\r\n                \"minLength\": 8\r\n              },\r\n              \"name\": {\r\n                \"type\": \"string\",\r\n                \"minLength\": 2\r\n              },\r\n              \"role\": {\r\n                \"type\": \"string\",\r\n                \"enum\": [\r\n                  \"guest\",\r\n                  \"user\",\r\n                  \"userAdmin\",\r\n                  \"groupAdmin\"\r\n                ]\r\n              },\r\n              \"description\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"required\": [\r\n              \"id\",\r\n              \"name\",\r\n              \"role\"\r\n            ]\r\n          },\r\n          \"memberIds\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"description\": \"User ids of users that are members of this group.\"\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"group\",\r\n          \"memberIds\"\r\n        ]\r\n      },\r\n      \"AuthDTO\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"userName\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 1,\r\n            \"maxLength\": 64\r\n          },\r\n          \"password\": {\r\n            \"type\": \"string\",\r\n            \"minLength\": 1,\r\n            \"maxLength\": 64\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"userName\",\r\n          \"password\"\r\n        ]\r\n      },\r\n      \"AuthResponseDTO\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"authenticated\": {\r\n            \"type\": \"boolean\",\r\n            \"enum\": [\r\n              true\r\n            ]\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"id\",\r\n          \"userName\",\r\n          \"authenticated\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"externalDocs\": {\r\n    \"description\": \"OpenAPI JSON document\",\r\n    \"url\": \"./docs-json\"\r\n  }\r\n}",
			"url": "http://localhost:4210/docs-json",
			"output": null,
			"newLineBehavior": "Auto"
		}
	},
	"codeGenerators": {
		"openApiToTypeScriptClient": {
			"className": "{controller}Client",
			"moduleName": "",
			"namespace": "",
			"typeScriptVersion": 4.3,
			"template": "Fetch",
			"promiseType": "Promise",
			"httpClass": "HttpClient",
			"withCredentials": false,
			"useSingletonProvider": false,
			"injectionTokenType": "OpaqueToken",
			"rxJsVersion": 6,
			"dateTimeType": "String",
			"nullValue": "Undefined",
			"generateClientClasses": true,
			"generateClientInterfaces": true,
			"generateOptionalParameters": true,
			"exportTypes": true,
			"wrapDtoExceptions": false,
			"exceptionClass": "ApiException",
			"clientBaseClass": null,
			"wrapResponses": false,
			"wrapResponseMethods": [],
			"generateResponseClasses": true,
			"responseClass": "SwaggerResponse",
			"protectedMethods": [],
			"configurationClass": null,
			"useTransformOptionsMethod": false,
			"useTransformResultMethod": false,
			"generateDtoTypes": true,
			"operationGenerationMode": "MultipleClientsFromOperationId",
			"markOptionalProperties": true,
			"generateCloneMethod": false,
			"typeStyle": "Class",
			"enumStyle": "Enum",
			"useLeafType": false,
			"classTypes": [],
			"extendedClasses": [],
			"extensionCode": null,
			"generateDefaultValues": true,
			"excludedTypeNames": [],
			"excludedParameterNames": [],
			"handleReferences": false,
			"generateTypeCheckFunctions": false,
			"generateConstructorInterface": true,
			"convertConstructorInterfaceData": false,
			"importRequiredTypes": true,
			"useGetBaseUrlMethod": false,
			"baseUrlTokenName": "API_BASE_URL",
			"queryNullValue": "",
			"useAbortSignal": false,
			"inlineNamedDictionaries": false,
			"inlineNamedAny": false,
			"includeHttpContext": false,
			"templateDirectory": null,
			"typeNameGeneratorType": null,
			"propertyNameGeneratorType": null,
			"enumNameGeneratorType": null,
			"serviceHost": null,
			"serviceSchemes": null,
			"output": null,
			"newLineBehavior": "Auto"
		}
	}
}
